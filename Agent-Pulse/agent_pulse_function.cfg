#It appears you can't pass hard-coded variables to custom user functions....
#So....
#Accept a value, try to determine what it is quickly and return an SID
Start Function pulsematch
def pulsematch(self,value):
    try:
        import redis
    except:
        return 999

    socket_path = '/var/run/redis/redis-server-otx.sock'
    db_types = {'IP': 0, 'HASH': 1, 'DOMAIN': 2}

    try:
        v = value.decode('UTF-8', errors='strict').lower()
        #print v
    except:
        return 998

    try:
        if v.find(".") > 0:
            #Quicker than regex?
            if v.replace(".","").isnumeric():
                value_type = 'IP'
            else:
                value_type = 'DOMAIN'
        else:
            value_type = 'HASH'
        #print "Value: %s - Type: %s" % (value,value_type)

        db = db_types[value_type]
    except:
        return 997
        
    try:
        r = redis.Redis(unix_socket_path=socket_path, db=db)
    except:
        return 996
    
    if r.exists(v):
        return 209999 
    else:
        return 900
End Function

Start Function pulseidextract
def pulseidextract(self,value):
    try:
        import redis
    except:
        return 999

    socket_path = '/var/run/redis/redis-server-otx.sock'
    db_types = {'IP': 0, 'HASH': 1, 'DOMAIN': 2}

    try:
        v = value.decode('UTF-8', errors='strict').lower()
        #print v
    except:
        return 998

    try:
        if v.find(".") > 0:
            #Quicker than regex?
            if v.replace(".","").isnumeric():
                value_type = 'IP'
            else:
                value_type = 'DOMAIN'
        else:
            value_type = 'HASH'
        #print "Value: %s - Type: %s" % (value,value_type)

        db = db_types[value_type]
    except:
        return 997
        
    try:
        r = redis.Redis(unix_socket_path=socket_path, db=db)
    except:
        return 996
    
    if r.exists(v):
        try:
                v2 = r.sscan(v)
                #this wil only return the first pulse-id. maybe we should change this to return an array instead
                return v2[1][0]
        except:
                return 0
    else:
        return 900
End Function
